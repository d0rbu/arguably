#!/usr/bin/env python3
import subprocess
from pathlib import Path
from typing import Annotated, Optional

import arguably


sphinx_choices = [
    "html",
    "dirhtml",
    "singlehtml",
    "pickle",
    "json",
    "htmlhelp",
    "qthelp",
    "devhelp",
    "epub",
    "latex",
    "latexpdf",
    "latexpdfja",
    "text",
    "man",
    "texinfo",
    "info",
    "gettext",
    "changes",
    "xml",
    "pseudoxml",
    "linkcheck",
    "doctest",
    "coverage",
    "clean",
]

sphinx_src = Path(__file__).parent
sphinx_dst = sphinx_src / "_build"


@arguably.command(help=False)
def main(
    target: Annotated[Optional[str], arguably.arg.choices(*sphinx_choices)] = None,
    *,
    help: bool = False,
) -> None:
    """
    build the docs using sphinx
    :param target: which build {target} to run
    :param help: [-h] show sphinx help
    """
    if help:
        target = "help"

    if target is not None:
        args = ["sphinx-build", "-M", target, str(sphinx_src), str(sphinx_dst)]
    else:
        args = ["sphinx-build", str(sphinx_src), str(sphinx_dst)]

    print(f"running: {' '.join(args)}")
    print()
    subprocess.run(args)


if __name__ == "__main__":
    arguably.run(show_types=True, show_defaults=True)
